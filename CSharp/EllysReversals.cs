using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Text;
using System.Text.RegularExpressions;


public class EllysReversals
{
	public int getMin(string[] words)
	{
		int n = words.Length;
		bool[] ex = new bool[n];
		for (int i = 0;i < n;i++)
			for (int j = 0;j < n;j++)
				if (i != j && !(ex[i] || ex[j]))
				{
					if (ok(words[i], words[j]))
					{
						ex[i] = ex[j] = true;
					}
				}
		int res = 0;
		foreach (bool b in ex)
			if (!b) res++;
		return res;
	}
	
	bool ok(string a, string b)
	{
		if (a.Length != b.Length)
			return false;
			
		int l = a.Length;
		if (l % 2 != 0 && a[l-1] != b[l-1]) return false;
		
		int [,] sa = sign(a);
		int [,] sb = sign(b);
		
		for (int i = 0;i < 26;i++)
			for (int j = 0;j < 26;j++)
				if (sa[i, j] != sb[i, j])
					return false;
		return true;
	}
	
	int [,]sign(string s)
	{
		int[,] res=  new int[26, 26];
		for (int i = 0;i < s.Length - 1;i += 2)
		{
			int a, b;
			a = s[i] - 'a';
			b = s[i+1] - 'a';
			res[a, b]++;
			res[b, a]++;
		}
		return res;
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	#region Testing code generated by KawigiEdit
	[STAThread]
	private static Boolean KawigiEdit_RunTest(int testNum, string[] p0, Boolean hasAnswer, int p1) {
		Console.Write("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.Length > i; ++i) {
			if (i > 0) {
				Console.Write(",");
			}
			Console.Write("\"" + p0[i] + "\"");
		}
		Console.Write("}");
		Console.WriteLine("]");
		EllysReversals obj;
		int answer;
		obj = new EllysReversals();
		DateTime startTime = DateTime.Now;
		answer = obj.getMin(p0);
		DateTime endTime = DateTime.Now;
		Boolean res;
		res = true;
		Console.WriteLine("Time: " + (endTime - startTime).TotalSeconds + " seconds");
		if (hasAnswer) {
			Console.WriteLine("Desired answer:");
			Console.WriteLine("\t" + p1);
		}
		Console.WriteLine("Your answer:");
		Console.WriteLine("\t" + answer);
		if (hasAnswer) {
			res = answer == p1;
		}
		if (!res) {
			Console.WriteLine("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime).TotalSeconds >= 2) {
			Console.WriteLine("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			Console.WriteLine("Match :-)");
		} else {
			Console.WriteLine("OK, but is it right?");
		}
		Console.WriteLine("");
		return res;
	}
	public static void Main(string[] args) {
		Boolean all_right;
		all_right = true;
		
		string[] p0;
		int p1;
		
		// ----- test 0 -----
		p0 = new string[]{"esprit","god","redotopc","odcpoter","dog"};
		p1 = 3;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new string[]{"no","zaphod","just","very","improbable"};
		p1 = 5;
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new string[]{"rats","live","stressed","to","act","as","star","desserts","of","evil","cat","sa","fo","ot"};
		p1 = 0;
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new string[]{"topcoder","redocpot","doretopc","cpotdoer","harlemshake"};
		p1 = 1;
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new string[]{"iprlzgukfggzg","bmhxvjbrtkbxy","khapjiabbny","nqlwgmcyvdikt","nxromtvtpug","leealcapovm","ushnxwjczczbmd","bwhykzupcux","xrlboyuwlnsp","bbjoketeheezfs","dxfztrldomjqkv","dkbktqdtgfujcut","zfybzyuxgpnt","ffmsldrdftode","vopuufksxd","pqhbsiujwda","yhwbkzupcux","hkbabnapjiy","zqsqefrrzehtxn","yovinyguyudmv"};
		p1 = 16;
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			Console.WriteLine("You're a stud (at least on the example cases)!");
		} else {
			Console.WriteLine("Some of the test cases had errors.");
		}
	}
	#endregion
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
