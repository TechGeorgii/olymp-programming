using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Text;
using System.Text.RegularExpressions;


public class AstronomicalRecordsEasy
{
	public int minimalPlanets(int[] A, int[] B)
	{
		int min = int.MaxValue;
		for (int p = 0;p < A.Length;p++)
		for (int q = 0;q < B.Length;q++)
		{			
			int ma = A[p];
			int mb = B[q];
			HashSet<int> ss = new HashSet<int>();
			for (int i = 0;i < B.Length;i++)
				ss.Add(B[i] * ma);
			for (int i = 0;i < A.Length;i++)
				ss.Add(A[i] * mb);
			
			min = Math.Min(min, ss.Count);
		}
		
		return min;
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	#region Testing code generated by KawigiEdit
	[STAThread]
	private static Boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1, Boolean hasAnswer, int p2) {
		Console.Write("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.Length > i; ++i) {
			if (i > 0) {
				Console.Write(",");
			}
			Console.Write(p0[i]);
		}
		Console.Write("}" + "," + "{");
		for (int i = 0; p1.Length > i; ++i) {
			if (i > 0) {
				Console.Write(",");
			}
			Console.Write(p1[i]);
		}
		Console.Write("}");
		Console.WriteLine("]");
		AstronomicalRecordsEasy obj;
		int answer;
		obj = new AstronomicalRecordsEasy();
		DateTime startTime = DateTime.Now;
		answer = obj.minimalPlanets(p0, p1);
		DateTime endTime = DateTime.Now;
		Boolean res;
		res = true;
		Console.WriteLine("Time: " + (endTime - startTime).TotalSeconds + " seconds");
		if (hasAnswer) {
			Console.WriteLine("Desired answer:");
			Console.WriteLine("\t" + p2);
		}
		Console.WriteLine("Your answer:");
		Console.WriteLine("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			Console.WriteLine("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime).TotalSeconds >= 2) {
			Console.WriteLine("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			Console.WriteLine("Match :-)");
		} else {
			Console.WriteLine("OK, but is it right?");
		}
		Console.WriteLine("");
		return res;
	}
	public static void Main(string[] args) {
		//int rrr = new AstronomicalRecordsEasy().minimalPlanets(new int[] { 3, 6 }, new int[] { 2, 4 });

		Boolean all_right;
		all_right = true;
		
		int[] p0;
		int[] p1;
		int p2;
		
		// ----- test 0 -----
		p0 = new int[]{1,2,3,4};
		p1 = new int[]{2,3,4,5};
		p2 = 5;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new int[]{1,2,3,4};
		p1 = new int[]{2,4,6,8};
		p2 = 4;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new int[]{1,2,3,5,6,8,9};
		p1 = new int[]{2,4,5,6,7,8,9};
		p2 = 9;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new int[]{1,2,3,4};
		p1 = new int[]{6,7,8,9};
		p2 = 6;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new int[]{200,500};
		p1 = new int[]{100,200,300,400,600,700,800,900};
		p2 = 9;
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = new int[]{1,2,3,4,5,6,7,8,9,10,11,12};
		p1 = new int[]{6,7,8,9,10,11,12,13,14,15};
		p2 = 15;
		all_right = KawigiEdit_RunTest(5, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			Console.WriteLine("You're a stud (at least on the example cases)!");
		} else {
			Console.WriteLine("Some of the test cases had errors.");
		}
	}
	#endregion
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
