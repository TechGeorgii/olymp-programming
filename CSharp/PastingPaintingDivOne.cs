using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Text;
using System.Text.RegularExpressions;


public class PastingPaintingDivOne
{
	public long[] countColors(string[] clipboard, int T)
	{
		long []rgb = new long[3];
		char[,] f = new char[200, 200];
		
		int p;
		for (p = 0;p < Math.Min(T, 60);p++)
		{
			draw(p, f, clipboard);
		}
		
		rgb = calc(f);
		
		if (T > 60)
		{
			draw(p, f, clipboard);
			long[] next_step = calc(f);
			long[] step = new long[3];
			for (int i = 0;i < 3;i++)
				step[i] = next_step[i] - rgb[i];
				
			for (int i = 0;i < 3;i++)
				rgb[i] += step[i] * (long)(T - 60);
		}
		
		return rgb;
	}
	
	void draw(int p, char[,] f, string []clip)
	{
		for (int i = 0;i < clip.Length;i++)
			for (int j = 0;j < clip[0].Length;j++)
			{
				if (clip[i][j] != '.')
					f[i + p, j + p] = clip[i][j];
			}
	}
		
	long[] calc(char[,] f)
	{
		long []rgb = new long[3];
		string sign = "RGB";
		
		for (int i = 0;i < f.GetLength(0);i++)
			for (int j = 0;j < f.GetLength(1);j++)
			{
				int idx = sign.IndexOf(f[i, j]);
				if (idx != -1)
					rgb[idx]++;
			}
		
		return rgb;
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	#region Testing code generated by KawigiEdit
	[STAThread]
	private static Boolean KawigiEdit_RunTest(int testNum, string[] p0, int p1, Boolean hasAnswer, long[] p2) {
		Console.Write("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.Length > i; ++i) {
			if (i > 0) {
				Console.Write(",");
			}
			Console.Write("\"" + p0[i] + "\"");
		}
		Console.Write("}" + "," + p1);
		Console.WriteLine("]");
		PastingPaintingDivOne obj;
		long[] answer;
		obj = new PastingPaintingDivOne();
		DateTime startTime = DateTime.Now;
		answer = obj.countColors(p0, p1);
		DateTime endTime = DateTime.Now;
		Boolean res;
		res = true;
		Console.WriteLine("Time: " + (endTime - startTime).TotalSeconds + " seconds");
		if (hasAnswer) {
			Console.WriteLine("Desired answer:");
			Console.Write("\t" + "{");
			for (int i = 0; p2.Length > i; ++i) {
				if (i > 0) {
					Console.Write(",");
				}
				Console.Write(p2[i]);
			}
			Console.WriteLine("}");
		}
		Console.WriteLine("Your answer:");
		Console.Write("\t" + "{");
		for (int i = 0; answer.Length > i; ++i) {
			if (i > 0) {
				Console.Write(",");
			}
			Console.Write(answer[i]);
		}
		Console.WriteLine("}");
		if (hasAnswer) {
			if (answer.Length != p2.Length) {
				res = false;
			} else {
				for (int i = 0; answer.Length > i; ++i) {
					if (answer[i] != p2[i]) {
						res = false;
					}
				}
			}
		}
		if (!res) {
			Console.WriteLine("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime).TotalSeconds >= 2) {
			Console.WriteLine("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			Console.WriteLine("Match :-)");
		} else {
			Console.WriteLine("OK, but is it right?");
		}
		Console.WriteLine("");
		return res;
	}
	public static void Main(string[] args) {
		Boolean all_right;
		all_right = true;
		
		string[] p0;
		int p1;
		long[] p2;
		
		// ----- test 0 -----
		p0 = new string[]{"..G","R..","BG."};
		p1 = 3;
		p2 = new long[]{3L,4L,3L};
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new string[]{"R...","....","....","...R"};
		p1 = 2;
		p2 = new long[]{4L,0L,0L};
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new string[]{"RGB"};
		p1 = 100000;
		p2 = new long[]{100000L,100000L,100000L};
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new string[]{"."};
		p1 = 1000000000;
		p2 = new long[]{0L,0L,0L};
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new string[]{"RB.",".G."};
		p1 = 100;
		p2 = new long[]{100L,1L,100L};
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = new string[]{"..........G..........",".........G.G.........","........G...G........",".......G.....G.......","......G..B.B..G......",".....G...B.B...G.....","....G...........G....","...G...R.....R...G...","..G.....RRRRRR....G..",".G..........RR.....G.","GGGGGGGGGGGGGGGGGGGGG"};
		p1 = 1000000000;
		p2 = new long[]{2000000018L,17000000048L,2000000005L};
		all_right = KawigiEdit_RunTest(5, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			Console.WriteLine("You're a stud (at least on the example cases)!");
		} else {
			Console.WriteLine("Some of the test cases had errors.");
		}
	}
	#endregion
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
