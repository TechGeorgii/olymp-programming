using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Text;
using System.Text.RegularExpressions;

public class BigFatInteger2
{
	const int lim = 35000;
	bool[] isPrime = new bool[lim];

	public string isDivisible(int A, int B, int C, int D)
	{
		for (int i = 2; i < lim; i++)
			isPrime[i] = true;

		for (int i = 2; i < lim; i++)
			if (isPrime[i])
				for (int j = i + i; j < lim; j += i)
					isPrime[j] = false;

		Dictionary<int, long> a = fact(A);
		Dictionary<int, long> c = fact(C);
		foreach (int k in keys(a.Keys))
		{
			a[k] = a[k] * B;
		}

		foreach (int k in keys(c.Keys))
		{
			c[k] = c[k] * D;
		}

		foreach (int k in keys(c.Keys))
		{
			if (!a.ContainsKey(k) || c[k] > a[k])
				return "not divisible";
		}

		return "divisible";
	}

	int[] keys(Dictionary<int, long>.KeyCollection col)
	{
		List<int> r = new List<int>();
		foreach (var k in col)
			r.Add(k);
		return r.ToArray();
	}

	Dictionary<int, long> fact(int x)
	{
		Dictionary<int, long> res = new Dictionary<int, long>();

		for (int i = 2; i < lim; i++)
			if (isPrime[i])
			{
				while (x % i == 0)
				{
					if (!res.ContainsKey(i))
						res.Add(i, 1);
					else
						res[i] = res[i] + 1;

					x /= i;
				}
			}
		if (x != 1)
		{
			if (!res.ContainsKey(x))
				res.Add(x, 1);
			else
				res[x] = res[x] + 1;
		}
		return res;
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	#region Testing code generated by KawigiEdit
	[STAThread]
	private static Boolean KawigiEdit_RunTest(int testNum, int p0, int p1, int p2, int p3, Boolean hasAnswer, string p4)
	{
		Console.Write("Test " + testNum + ": [" + p0 + "," + p1 + "," + p2 + "," + p3);
		Console.WriteLine("]");
		BigFatInteger2 obj;
		string answer;
		obj = new BigFatInteger2();
		DateTime startTime = DateTime.Now;
		answer = obj.isDivisible(p0, p1, p2, p3);
		DateTime endTime = DateTime.Now;
		Boolean res;
		res = true;
		Console.WriteLine("Time: " + (endTime - startTime).TotalSeconds + " seconds");
		if (hasAnswer)
		{
			Console.WriteLine("Desired answer:");
			Console.WriteLine("\t" + "\"" + p4 + "\"");
		}
		Console.WriteLine("Your answer:");
		Console.WriteLine("\t" + "\"" + answer + "\"");
		if (hasAnswer)
		{
			res = answer == p4;
		}
		if (!res)
		{
			Console.WriteLine("DOESN'T MATCH!!!!");
		}
		else if ((endTime - startTime).TotalSeconds >= 2)
		{
			Console.WriteLine("FAIL the timeout");
			res = false;
		}
		else if (hasAnswer)
		{
			Console.WriteLine("Match :-)");
		}
		else
		{
			Console.WriteLine("OK, but is it right?");
		}
		Console.WriteLine("");
		return res;
	}
	public static void Main(string[] args)
	{
		Boolean all_right;
		all_right = true;

		int p0;
		int p1;
		int p2;
		int p3;
		string p4;

		// ----- test 0 -----
		p0 = 6;
		p1 = 1;
		p2 = 2;
		p3 = 1;
		p4 = "divisible";
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = 2;
		p1 = 1;
		p2 = 6;
		p3 = 1;
		p4 = "not divisible";
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = 1000000000;
		p1 = 1000000000;
		p2 = 1000000000;
		p3 = 200000000;
		p4 = "divisible";
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = 8;
		p1 = 100;
		p2 = 4;
		p3 = 200;
		p4 = "not divisible";
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------

		// ----- test 4 -----
		p0 = 999999937;
		p1 = 1000000000;
		p2 = 999999929;
		p3 = 1;
		p4 = "not divisible";
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------

		// ----- test 5 -----
		p0 = 2;
		p1 = 2;
		p2 = 4;
		p3 = 1;
		p4 = "divisible";
		all_right = KawigiEdit_RunTest(5, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------

		if (all_right)
		{
			Console.WriteLine("You're a stud (at least on the example cases)!");
		}
		else
		{
			Console.WriteLine("Some of the test cases had errors.");
		}
	}
	#endregion
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
