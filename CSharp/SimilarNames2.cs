using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Text;
using System.Text.RegularExpressions;


public class SimilarNames2
{
	const int MOD = 1000000007;
	int n;
	string[] ns;
	int[,] D;
	bool[,] C;

	public int count(string[] names, int L)
	{
		ns = names;
		n = names.Length;
		Array.Sort(names);

		D = new int[n, L];
		C = new bool[n, L];

		long r = 0;

		for (int i = n - 1; i >= 0; i--)
			r = (r + res(i, L - 1)) % MOD;

		for (int i = 2; i <= n - L; i++)
			r = (r * i) % MOD;

		return (int)r;
	}

	long res(int take, int l)
	// how many combinations if we are surely taking
	// <take> string, and have l more strings to take
	{
		if (l == 0)
			return 1;

		if (take < 0)
			return 0;

		if (C[take, l])
			return D[take, l];

		C[take, l] = true;
		long r = 0;

		for (int i = take - 1; i >= 0; i--)
			if (ns[take].StartsWith(ns[i]))
			{
				long cur = res(i, l - 1);
				r += cur;
				r %= MOD;
			}

		D[take, l] = (int)r;
		return r;
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	#region Testing code generated by KawigiEdit
	[STAThread]
	private static Boolean KawigiEdit_RunTest(int testNum, string[] p0, int p1, Boolean hasAnswer, int p2)
	{
		Console.Write("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.Length > i; ++i)
		{
			if (i > 0)
			{
				Console.Write(",");
			}
			Console.Write("\"" + p0[i] + "\"");
		}
		Console.Write("}" + "," + p1);
		Console.WriteLine("]");
		SimilarNames2 obj;
		int answer;
		obj = new SimilarNames2();
		DateTime startTime = DateTime.Now;
		answer = obj.count(p0, p1);
		DateTime endTime = DateTime.Now;
		Boolean res;
		res = true;
		Console.WriteLine("Time: " + (endTime - startTime).TotalSeconds + " seconds");
		if (hasAnswer)
		{
			Console.WriteLine("Desired answer:");
			Console.WriteLine("\t" + p2);
		}
		Console.WriteLine("Your answer:");
		Console.WriteLine("\t" + answer);
		if (hasAnswer)
		{
			res = answer == p2;
		}
		if (!res)
		{
			Console.WriteLine("DOESN'T MATCH!!!!");
		}
		else if ((endTime - startTime).TotalSeconds >= 2)
		{
			Console.WriteLine("FAIL the timeout");
			res = false;
		}
		else if (hasAnswer)
		{
			Console.WriteLine("Match :-)");
		}
		else
		{
			Console.WriteLine("OK, but is it right?");
		}
		Console.WriteLine("");
		return res;
	}
	public static void Main(string[] args)
	{
		Boolean all_right;
		all_right = true;

		string[] p0;
		int p1;
		int p2;

		// ----- test 0 -----
		p0 = new string[] { "kenta", "kentaro", "ken" };
		p1 = 2;
		p2 = 3;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = new string[] { "hideo", "hideto", "hideki", "hide" };
		p1 = 2;
		p2 = 6;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = new string[] { "aya", "saku", "emi", "ayane", "sakura", "emika", "sakurako" };
		p1 = 3;
		p2 = 24;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = new string[] { "taro", "jiro", "hanako" };
		p1 = 2;
		p2 = 0;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 4 -----
		p0 = new string[] { "alice", "bob", "charlie" };
		p1 = 1;
		p2 = 6;
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 5 -----
		p0 = new string[] { "ryota", "ryohei", "ryotaro", "ryo", "ryoga", "ryoma", "ryoko", "ryosuke", "ciel", "lun", "ryuta", "ryuji", "ryuma", "ryujiro", "ryusuke", "ryutaro", "ryu", "ryuhei", "ryuichi", "evima" };
		p1 = 3;
		p2 = 276818566;
		all_right = KawigiEdit_RunTest(5, p0, p1, true, p2) && all_right;
		// ------------------

		if (all_right)
		{
			Console.WriteLine("You're a stud (at least on the example cases)!");
		}
		else
		{
			Console.WriteLine("Some of the test cases had errors.");
		}
	}
	#endregion
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
