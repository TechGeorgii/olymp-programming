using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Text;
using System.Text.RegularExpressions;


public class LittleElephantAndDouble
{
	public string getAnswer(int[] A)
	{
		int n = A.Length;
		for (int i = 0;i < n;i++)
			for (int j = 0;j < n;j++)
			{
				int a, b;
				a = Math.Max(A[i], A[j]);
				b = Math.Min(A[i], A[j]);
				int d = a / b;
				if (a % b != 0)
					return "NO";
				int cnt = 0;
				for (int k = 0;k < 30;k++)
				{
					if ((d & 1) == 1) cnt++;
					d = d >> 1;
				}
				if (cnt != 1)
					return "NO";
			}
		return "YES";
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	#region Testing code generated by KawigiEdit
	[STAThread]
	private static Boolean KawigiEdit_RunTest(int testNum, int[] p0, Boolean hasAnswer, string p1) {
		Console.Write("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.Length > i; ++i) {
			if (i > 0) {
				Console.Write(",");
			}
			Console.Write(p0[i]);
		}
		Console.Write("}");
		Console.WriteLine("]");
		LittleElephantAndDouble obj;
		string answer;
		obj = new LittleElephantAndDouble();
		DateTime startTime = DateTime.Now;
		answer = obj.getAnswer(p0);
		DateTime endTime = DateTime.Now;
		Boolean res;
		res = true;
		Console.WriteLine("Time: " + (endTime - startTime).TotalSeconds + " seconds");
		if (hasAnswer) {
			Console.WriteLine("Desired answer:");
			Console.WriteLine("\t" + "\"" + p1 + "\"");
		}
		Console.WriteLine("Your answer:");
		Console.WriteLine("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer == p1;
		}
		if (!res) {
			Console.WriteLine("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime).TotalSeconds >= 2) {
			Console.WriteLine("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			Console.WriteLine("Match :-)");
		} else {
			Console.WriteLine("OK, but is it right?");
		}
		Console.WriteLine("");
		return res;
	}
	public static void Main(string[] args) {
		Boolean all_right;
		all_right = true;
		
		int[] p0;
		string p1;
		
		// ----- test 0 -----
		p0 = new int[]{1,2};
		p1 = "YES";
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new int[]{1,2,3};
		p1 = "NO";
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new int[]{4,8,2,1,16};
		p1 = "YES";
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new int[]{94,752,94,376,1504};
		p1 = "YES";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new int[]{148,298,1184};
		p1 = "NO";
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = new int[]{7,7,7,7};
		p1 = "YES";
		all_right = KawigiEdit_RunTest(5, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			Console.WriteLine("You're a stud (at least on the example cases)!");
		} else {
			Console.WriteLine("Some of the test cases had errors.");
		}
	}
	#endregion
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
